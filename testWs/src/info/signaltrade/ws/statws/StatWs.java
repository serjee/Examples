package info.signaltrade.ws.statws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StatWs", targetNamespace = "http://signaltrade.info/ws/StatWs")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StatWs {


    /**
     * 
     * @param imageContent
     * @param allDeals
     * @param maxDrawdown
     * @param dateFinish
     * @param qualityTest
     * @param timeframe
     * @param typeList
     * @param dateStart
     * @param sl
     * @param percentWin
     * @param profitFactor
     * @param imageName
     * @param avgWins
     * @param symbolRef
     * @param percentFail
     * @param avgLoss
     * @param failDeals
     * @param winDeals
     * @param name
     * @param expiration
     * @param tp
     * @param strategyRef
     * @param expectedPayoff
     * @param status
     * @param msg
     */
    @WebMethod(operationName = "AddStrategyStat", action = "http://signaltrade.info/ws/StatWs/AddStrategyStat")
    @RequestWrapper(localName = "AddStrategyStat", targetNamespace = "http://signaltrade.info/ws/StatWs", className = "info.signaltrade.ws.statws.AddStrategyStat")
    @ResponseWrapper(localName = "AddStrategyStatResponse", targetNamespace = "http://signaltrade.info/ws/StatWs", className = "info.signaltrade.ws.statws.AddStrategyStatResponse")
    public void addStrategyStat(
            @WebParam(name = "name", targetNamespace = "")
            String name,
            @WebParam(name = "strategy_ref", targetNamespace = "")
            String strategyRef,
            @WebParam(name = "type_list", targetNamespace = "")
            String typeList,
            @WebParam(name = "symbol_ref", targetNamespace = "")
            String symbolRef,
            @WebParam(name = "timeframe", targetNamespace = "")
            Integer timeframe,
            @WebParam(name = "expiration", targetNamespace = "")
            Integer expiration,
            @WebParam(name = "date_start", targetNamespace = "")
            String dateStart,
            @WebParam(name = "date_finish", targetNamespace = "")
            String dateFinish,
            @WebParam(name = "all_deals", targetNamespace = "")
            Integer allDeals,
            @WebParam(name = "win_deals", targetNamespace = "")
            Integer winDeals,
            @WebParam(name = "fail_deals", targetNamespace = "")
            Integer failDeals,
            @WebParam(name = "percent_win", targetNamespace = "")
            double percentWin,
            @WebParam(name = "percent_fail", targetNamespace = "")
            double percentFail,
            @WebParam(name = "expected_payoff", targetNamespace = "")
            double expectedPayoff,
            @WebParam(name = "profit_factor", targetNamespace = "")
            double profitFactor,
            @WebParam(name = "max_drawdown", targetNamespace = "")
            double maxDrawdown,
            @WebParam(name = "avg_wins", targetNamespace = "")
            Integer avgWins,
            @WebParam(name = "avg_loss", targetNamespace = "")
            Integer avgLoss,
            @WebParam(name = "sl", targetNamespace = "")
            Integer sl,
            @WebParam(name = "tp", targetNamespace = "")
            Integer tp,
            @WebParam(name = "image_name", targetNamespace = "")
            String imageName,
            @WebParam(name = "image_content", targetNamespace = "")
            String imageContent,
            @WebParam(name = "quality_test", targetNamespace = "")
            double qualityTest,
            @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<Integer> status,
            @WebParam(name = "msg", targetNamespace = "", mode = WebParam.Mode.OUT)
            Holder<String> msg);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Average", action = "http://signaltrade.info/ws/StatWs/Average")
    @WebResult(name = "status", targetNamespace = "")
    @RequestWrapper(localName = "Average", targetNamespace = "http://signaltrade.info/ws/StatWs", className = "info.signaltrade.ws.statws.Average")
    @ResponseWrapper(localName = "AverageResponse", targetNamespace = "http://signaltrade.info/ws/StatWs", className = "info.signaltrade.ws.statws.AverageResponse")
    public int average(
            @WebParam(name = "num1", targetNamespace = "")
            int num1,
            @WebParam(name = "num2", targetNamespace = "")
            int num2);

}
